package lucidkit.godot;

@:native("godot.CPUParticles")
extern class CPUParticles extends GeometryInstance {
    public var amount: Int;
    public var angle: Float;
    public var angle_curve: Curve;
    public var angle_random: Float;
    public var angular_velocity: Float;
    public var angular_velocity_curve: Curve;
    public var angular_velocity_random: Float;
    public var anim_offset: Float;
    public var anim_offset_curve: Curve;
    public var anim_offset_random: Float;
    public var anim_speed: Float;
    public var anim_speed_curve: Curve;
    public var anim_speed_random: Float;
    public var color: Color;
    public var color_initial_ramp: Gradient;
    public var color_ramp: Gradient;
    public var damping: Float;
    public var damping_curve: Curve;
    public var damping_random: Float;
    public var direction: Vector3;
    public var draw_order: Int;
    public var emission_box_extents: Vector3;
    public var emission_colors: PoolColorArray;
    public var emission_normals: PoolVector3Array;
    public var emission_points: PoolVector3Array;
    public var emission_ring_axis: Vector3;
    public var emission_ring_height: Float;
    public var emission_ring_inner_radius: Float;
    public var emission_ring_radius: Float;
    public var emission_shape: Int;
    public var emission_sphere_radius: Float;
    public var emitting: Bool;
    public var explosiveness: Float;
    public var fixed_fps: Int;
    public var flag_align_y: Bool;
    public var flag_disable_z: Bool;
    public var flag_rotate_y: Bool;
    public var flatness: Float;
    public var fract_delta: Bool;
    public var gravity: Vector3;
    public var hue_variation: Float;
    public var hue_variation_curve: Curve;
    public var hue_variation_random: Float;
    public var initial_velocity: Float;
    public var initial_velocity_random: Float;
    public var lifetime: Float;
    public var lifetime_randomness: Float;
    public var linear_accel: Float;
    public var linear_accel_curve: Curve;
    public var linear_accel_random: Float;
    public var local_coords: Bool;
    public var mesh: Mesh;
    public var one_shot: Bool;
    public var orbit_velocity: Float;
    public var orbit_velocity_curve: Curve;
    public var orbit_velocity_random: Float;
    public var preprocess: Float;
    public var radial_accel: Float;
    public var radial_accel_curve: Curve;
    public var radial_accel_random: Float;
    public var randomness: Float;
    public var scale_amount: Float;
    public var scale_amount_curve: Curve;
    public var scale_amount_random: Float;
    public var speed_scale: Float;
    public var spread: Float;
    public var tangential_accel: Float;
    public var tangential_accel_curve: Curve;
    public var tangential_accel_random: Float;
    public function convert_from_particles(particles: Node): Void;
    public function get_param(param: Int): Float;
    public function get_param_curve(param: Int): Curve;
    public function get_param_randomness(param: Int): Float;
    public function get_particle_flag(flag: Int): Bool;
    public function restart(): Void;
    public function set_param(param: Int, value: Float): Void;
    public function set_param_curve(param: Int, curve: Curve): Void;
    public function set_param_randomness(param: Int, randomness: Float): Void;
    public function set_particle_flag(flag: Int, enable: Bool): Void;
}
