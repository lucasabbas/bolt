package lucidKit.godot;

@:native("godot.AnimationTreePlayer")
extern class AnimationTreePlayer extends Node {
    public var active: Bool;
    public var base_path: NodePath;
    public var master_player: NodePath;
    public var playback_process_mode: Int;
    public function add_node(type: Int, id: String): Void;
    public function advance(delta: Float): Void;
    public function animation_node_get_animation(id: String): Animation;
    public function animation_node_get_master_animation(id: String): String;
    public function animation_node_get_position(id: String): Float;
    public function animation_node_set_animation(id: String, animation: Animation): Void;
    public function animation_node_set_filter_path(id: String, path: NodePath, enable: Bool): Void;
    public function animation_node_set_master_animation(id: String, source: String): Void;
    public function are_nodes_connected(id: String, dst_id: String, dst_input_idx: Int): Bool;
    public function blend2_node_get_amount(id: String): Float;
    public function blend2_node_set_amount(id: String, blend: Float): Void;
    public function blend2_node_set_filter_path(id: String, path: NodePath, enable: Bool): Void;
    public function blend3_node_get_amount(id: String): Float;
    public function blend3_node_set_amount(id: String, blend: Float): Void;
    public function blend4_node_get_amount(id: String): Vector2;
    public function blend4_node_set_amount(id: String, blend: GdVector2): Void;
    public function connect_nodes(id: String, dst_id: String, dst_input_idx: Int): Int;
    public function disconnect_nodes(id: String, dst_input_idx: Int): Void;
    public function get_node_list(): PoolStringArray;
    public function mix_node_get_amount(id: String): Float;
    public function mix_node_set_amount(id: String, ratio: Float): Void;
    public function node_exists(node: String): Bool;
    public function node_get_input_count(id: String): Int;
    public function node_get_input_source(id: String, idx: Int): String;
    public function node_get_position(id: String): Vector2;
    public function node_get_type(id: String): Int;
    public function node_rename(node: String, new_name: String): Int;
    public function node_set_position(id: String, screen_position: GdVector2): Void;
    public function oneshot_node_get_autorestart_delay(id: String): Float;
    public function oneshot_node_get_autorestart_random_delay(id: String): Float;
    public function oneshot_node_get_fadein_time(id: String): Float;
    public function oneshot_node_get_fadeout_time(id: String): Float;
    public function oneshot_node_has_autorestart(id: String): Bool;
    public function oneshot_node_is_active(id: String): Bool;
    public function oneshot_node_set_autorestart(id: String, enable: Bool): Void;
    public function oneshot_node_set_autorestart_delay(id: String, delay_sec: Float): Void;
    public function oneshot_node_set_autorestart_random_delay(id: String, rand_sec: Float): Void;
    public function oneshot_node_set_fadein_time(id: String, time_sec: Float): Void;
    public function oneshot_node_set_fadeout_time(id: String, time_sec: Float): Void;
    public function oneshot_node_set_filter_path(id: String, path: NodePath, enable: Bool): Void;
    public function oneshot_node_start(id: String): Void;
    public function oneshot_node_stop(id: String): Void;
    public function recompute_caches(): Void;
    public function remove_node(id: String): Void;
    public function reset(): Void;
    public function timescale_node_get_scale(id: String): Float;
    public function timescale_node_set_scale(id: String, scale: Float): Void;
    public function timeseek_node_seek(id: String, seconds: Float): Void;
    public function transition_node_delete_input(id: String, input_idx: Int): Void;
    public function transition_node_get_current(id: String): Int;
    public function transition_node_get_input_count(id: String): Int;
    public function transition_node_get_xfade_time(id: String): Float;
    public function transition_node_has_input_auto_advance(id: String, input_idx: Int): Bool;
    public function transition_node_set_current(id: String, input_idx: Int): Void;
    public function transition_node_set_input_auto_advance(id: String, input_idx: Int, enable: Bool): Void;
    public function transition_node_set_input_count(id: String, count: Int): Void;
    public function transition_node_set_xfade_time(id: String, time_sec: Float): Void;
    @:native("__new")
    public function new();
}
