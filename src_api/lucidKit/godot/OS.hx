package lucidKit.godot;

@:native("godot.OS")
extern class OS extends Object {
    public var clipboard: String;
    public var current_screen: Int;
    public var delta_smoothing: Bool;
    public var exit_code: Int;
    public var keep_screen_on: Bool;
    public var low_processor_usage_mode: Bool;
    public var low_processor_usage_mode_sleep_usec: Int;
    public var max_window_size: Vector2;
    public var min_window_size: Vector2;
    public var screen_orientation: Int;
    public var tablet_driver: String;
    public var vsync_enabled: Bool;
    public var vsync_via_compositor: Bool;
    public var window_borderless: Bool;
    public var window_fullscreen: Bool;
    public var window_maximized: Bool;
    public var window_minimized: Bool;
    public var window_per_pixel_transparency_enabled: Bool;
    public var window_position: Vector2;
    public var window_resizable: Bool;
    public var window_size: Vector2;
    public function alert(text: String, title: String): Void;
    public function can_draw(): Bool;
    public function can_use_threads(): Bool;
    public function center_window(): Void;
    public function close_midi_inputs(): Void;
    public function crash(message: String): Void;
    public function delay_msec(msec: Int): Void;
    public function delay_usec(usec: Int): Void;
    public function dump_memory_to_file(file: String): Void;
    public function dump_resources_to_file(file: String): Void;
    public function execute(path: String, arguments: PoolStringArray, blocking: Bool, output: Array<Dynamic>, read_stderr: Bool, open_console: Bool): Int;
    public function find_scancode_from_string(string: String): Int;
    public function get_audio_driver_count(): Int;
    public function get_audio_driver_name(driver: Int): String;
    public function get_cache_dir(): String;
    public function get_cmdline_args(): PoolStringArray;
    public function get_config_dir(): String;
    public function get_connected_midi_inputs(): PoolStringArray;
    public function get_current_video_driver(): Int;
    public function get_data_dir(): String;
    public function get_date(utc: Bool): Map<Dynamic, Dynamic>;
    public function get_datetime(utc: Bool): Map<Dynamic, Dynamic>;
    public function get_datetime_from_unix_time(unix_time_val: Int): Map<Dynamic, Dynamic>;
    public function get_display_cutouts(): Array<Dynamic>;
    public function get_dynamic_memory_usage(): Int;
    public function get_environment(variable: String): String;
    public function get_executable_path(): String;
    public function get_granted_permissions(): PoolStringArray;
    public function get_ime_selection(): Vector2;
    public function get_ime_text(): String;
    public function get_latin_keyboard_variant(): String;
    public function get_locale(): String;
    public function get_locale_language(): String;
    public function get_main_thread_id(): Int;
    public function get_model_name(): String;
    public function get_name(): String;
    public function get_native_handle(handle_type: Int): Int;
    public function get_power_percent_left(): Int;
    public function get_power_seconds_left(): Int;
    public function get_power_state(): Int;
    public function get_process_id(): Int;
    public function get_processor_count(): Int;
    public function get_processor_name(): String;
    public function get_real_window_size(): Vector2;
    public function get_restart_on_exit_arguments(): PoolStringArray;
    public function get_scancode_string(code: Int): String;
    public function get_screen_count(): Int;
    public function get_screen_dpi(screen: Int): Int;
    public function get_screen_max_scale(): Float;
    public function get_screen_position(screen: Int): Vector2;
    public function get_screen_refresh_rate(screen: Int): Float;
    public function get_screen_scale(screen: Int): Float;
    public function get_screen_size(screen: Int): Vector2;
    public function get_splash_tick_msec(): Int;
    public function get_static_memory_peak_usage(): Int;
    public function get_static_memory_usage(): Int;
    public function get_system_dir(dir: Int, shared_storage: Bool): String;
    public function get_system_time_msecs(): Int;
    public function get_system_time_secs(): Int;
    public function get_tablet_driver_count(): Int;
    public function get_tablet_driver_name(idx: Int): String;
    public function get_thread_caller_id(): Int;
    public function get_ticks_msec(): Int;
    public function get_ticks_usec(): Int;
    public function get_time(utc: Bool): Map<Dynamic, Dynamic>;
    public function get_time_zone_info(): Map<Dynamic, Dynamic>;
    public function get_unique_id(): String;
    public function get_unix_time(): Int;
    public function get_unix_time_from_datetime(datetime: Map<Dynamic, Dynamic>): Int;
    public function get_user_data_dir(): String;
    public function get_video_driver_count(): Int;
    public function get_video_driver_name(driver: Int): String;
    public function get_virtual_keyboard_height(): Int;
    public function get_window_safe_area(): Rect2;
    public function global_menu_add_item(menu: String, label: String, id: Variant, meta: Variant): Void;
    public function global_menu_add_separator(menu: String): Void;
    public function global_menu_clear(menu: String): Void;
    public function global_menu_remove_item(menu: String, idx: Int): Void;
    public function has_clipboard(): Bool;
    public function has_environment(variable: String): Bool;
    public function has_feature(tag_name: String): Bool;
    public function has_touchscreen_ui_hint(): Bool;
    public function has_virtual_keyboard(): Bool;
    public function hide_virtual_keyboard(): Void;
    public function is_debug_build(): Bool;
    public function is_ok_left_and_cancel_right(): Bool;
    public function is_process_running(pid: Int): Bool;
    public function is_restart_on_exit_set(): Bool;
    public function is_scancode_unicode(code: Int): Bool;
    public function is_stdout_verbose(): Bool;
    public function is_userfs_persistent(): Bool;
    public function is_window_always_on_top(): Bool;
    public function is_window_focused(): Bool;
    public function keyboard_get_current_layout(): Int;
    public function keyboard_get_layout_count(): Int;
    public function keyboard_get_layout_language(index: Int): String;
    public function keyboard_get_layout_name(index: Int): String;
    public function keyboard_get_scancode_from_physical(scancode: Int): Int;
    public function keyboard_set_current_layout(index: Int): Void;
    public function kill(pid: Int): Int;
    public function move_to_trash(path: String): Int;
    public function move_window_to_foreground(): Void;
    public function native_video_is_playing(): Bool;
    public function native_video_pause(): Void;
    public function native_video_play(path: String, volume: Float, audio_track: String, subtitle_track: String): Int;
    public function native_video_stop(): Void;
    public function native_video_unpause(): Void;
    public function open_midi_inputs(): Void;
    public function print_all_resources(tofile: String): Void;
    public function print_all_textures_by_size(): Void;
    public function print_resources_by_type(types: PoolStringArray): Void;
    public function print_resources_in_use(short: Bool): Void;
    public function read_string_from_stdin(): String;
    public function request_attention(): Void;
    public function request_permission(name: String): Bool;
    public function request_permissions(): Bool;
    public function set_environment(variable: String, value: String): Bool;
    public function set_icon(icon: Image): Void;
    public function set_ime_active(active: Bool): Void;
    public function set_ime_position(position: GdVector2): Void;
    public function set_native_icon(filename: String): Void;
    public function set_restart_on_exit(restart: Bool, arguments: PoolStringArray): Void;
    public function set_thread_name(name: String): Int;
    public function set_use_file_access_save_and_swap(enabled: Bool): Void;
    public function set_window_always_on_top(enabled: Bool): Void;
    public function set_window_mouse_passthrough(region: PoolVector2Array): Void;
    public function set_window_title(title: String): Void;
    public function shell_open(uri: String): Int;
    public function show_virtual_keyboard(existing_text: String, multiline: Bool): Void;
    public function show_virtual_keyboard_type(existing_text: String, type: Int): Void;
    public function tts_get_voices(): Array<Dynamic>;
    public function tts_get_voices_for_language(language: String): PoolStringArray;
    public function tts_is_paused(): Bool;
    public function tts_is_speaking(): Bool;
    public function tts_pause(): Void;
    public function tts_resume(): Void;
    public function tts_set_utterance_callback(event: Int, object: Object, callback: String): Void;
    public function tts_speak(text: String, voice: String, volume: Int, pitch: Float, rate: Float, utterance_id: Int, interrupt: Bool): Void;
    public function tts_stop(): Void;
    @:native("__new")
    public function new();
}
