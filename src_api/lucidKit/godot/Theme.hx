package lucidKit.godot;

@:native("godot.Theme")
extern class Theme extends Resource {
    public var default_font: Font;
    public function add_type(theme_type: String): Void;
    public function clear(): Void;
    public function clear_color(name: String, theme_type: String): Void;
    public function clear_constant(name: String, theme_type: String): Void;
    public function clear_font(name: String, theme_type: String): Void;
    public function clear_icon(name: String, theme_type: String): Void;
    public function clear_stylebox(name: String, theme_type: String): Void;
    public function clear_theme_item(data_type: Int, name: String, theme_type: String): Void;
    public function clear_type_variation(theme_type: String): Void;
    public function copy_default_theme(): Void;
    public function copy_theme(other: Theme): Void;
    public function get_color(name: String, theme_type: String): Color;
    public function get_color_list(theme_type: String): PoolStringArray;
    public function get_color_types(): PoolStringArray;
    public function get_constant(name: String, theme_type: String): Int;
    public function get_constant_list(theme_type: String): PoolStringArray;
    public function get_constant_types(): PoolStringArray;
    public function get_font(name: String, theme_type: String): Font;
    public function get_font_list(theme_type: String): PoolStringArray;
    public function get_font_types(): PoolStringArray;
    public function get_icon(name: String, theme_type: String): Texture;
    public function get_icon_list(theme_type: String): PoolStringArray;
    public function get_icon_types(): PoolStringArray;
    public function get_stylebox(name: String, theme_type: String): StyleBox;
    public function get_stylebox_list(theme_type: String): PoolStringArray;
    public function get_stylebox_types(): PoolStringArray;
    public function get_theme_item(data_type: Int, name: String, theme_type: String): Variant;
    public function get_theme_item_list(data_type: Int, theme_type: String): PoolStringArray;
    public function get_theme_item_types(data_type: Int): PoolStringArray;
    public function get_type_list(theme_type: String): PoolStringArray;
    public function get_type_variation_base(theme_type: String): String;
    public function get_type_variation_list(base_type: String): PoolStringArray;
    public function has_color(name: String, theme_type: String): Bool;
    public function has_constant(name: String, theme_type: String): Bool;
    public function has_default_font(): Bool;
    public function has_font(name: String, theme_type: String): Bool;
    public function has_icon(name: String, theme_type: String): Bool;
    public function has_stylebox(name: String, theme_type: String): Bool;
    public function has_theme_item(data_type: Int, name: String, theme_type: String): Bool;
    public function is_type_variation(theme_type: String, base_type: String): Bool;
    public function merge_with(other: Theme): Void;
    public function remove_type(theme_type: String): Void;
    public function rename_color(old_name: String, name: String, theme_type: String): Void;
    public function rename_constant(old_name: String, name: String, theme_type: String): Void;
    public function rename_font(old_name: String, name: String, theme_type: String): Void;
    public function rename_icon(old_name: String, name: String, theme_type: String): Void;
    public function rename_stylebox(old_name: String, name: String, theme_type: String): Void;
    public function rename_theme_item(data_type: Int, old_name: String, name: String, theme_type: String): Void;
    public function set_color(name: String, theme_type: String, color: Color): Void;
    public function set_constant(name: String, theme_type: String, constant: Int): Void;
    public function set_font(name: String, theme_type: String, font: Font): Void;
    public function set_icon(name: String, theme_type: String, texture: Texture): Void;
    public function set_stylebox(name: String, theme_type: String, texture: StyleBox): Void;
    public function set_theme_item(data_type: Int, name: String, theme_type: String, value: Variant): Void;
    public function set_type_variation(theme_type: String, base_type: String): Void;
    @:native("__new")
    public function new();
}
