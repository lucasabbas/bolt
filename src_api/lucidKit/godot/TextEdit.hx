package lucidKit.godot;

@:native("godot.TextEdit")
extern class TextEdit extends Control {
    public var bookmark_gutter: Bool;
    public var breakpoint_gutter: Bool;
    public var caret_blink: Bool;
    public var caret_blink_speed: Float;
    public var caret_block_mode: Bool;
    public var caret_moving_by_right_click: Bool;
    public var context_menu_enabled: Bool;
    public var deselect_on_focus_loss_enabled: Bool;
    public var drag_and_drop_selection_enabled: Bool;
    public var draw_spaces: Bool;
    public var draw_tabs: Bool;
    public var fold_gutter: Bool;
    public var hiding_enabled: Bool;
    public var highlight_all_occurrences: Bool;
    public var highlight_current_line: Bool;
    public var middle_mouse_paste_enabled: Bool;
    public var minimap_draw: Bool;
    public var minimap_width: Int;
    public var override_selected_font_color: Bool;
    public var readonly: Bool;
    public var scroll_horizontal: Int;
    public var scroll_vertical: Float;
    public var selecting_enabled: Bool;
    public var shortcut_keys_enabled: Bool;
    public var show_line_numbers: Bool;
    public var smooth_scrolling: Bool;
    public var syntax_highlighting: Bool;
    public var text: String;
    public var v_scroll_speed: Float;
    public var virtual_keyboard_enabled: Bool;
    public var wrap_enabled: Bool;
    public function add_color_region(begin_key: String, end_key: String, color: Color, line_only: Bool): Void;
    public function add_keyword_color(keyword: String, color: Color): Void;
    public function can_fold(line: Int): Bool;
    public function center_viewport_to_cursor(): Void;
    public function clear_colors(): Void;
    public function clear_undo_history(): Void;
    public function copy(): Void;
    public function cursor_get_column(): Int;
    public function cursor_get_line(): Int;
    public function cursor_set_column(column: Int, adjust_viewport: Bool): Void;
    public function cursor_set_line(line: Int, adjust_viewport: Bool, can_be_hidden: Bool, wrap_index: Int): Void;
    public function cut(): Void;
    public function deselect(): Void;
    public function fold_all_lines(): Void;
    public function fold_line(line: Int): Void;
    public function get_breakpoints(): Array<Dynamic>;
    public function get_keyword_color(keyword: String): Color;
    public function get_line(line: Int): String;
    public function get_line_column_at_pos(position: GdVector2): Vector2;
    public function get_line_count(): Int;
    public function get_line_height(): Int;
    public function get_line_width(line: Int, wrap_index: Int): Int;
    public function get_line_wrap_count(line: Int): Int;
    public function get_line_wrapped_text(line: Int): PoolStringArray;
    public function get_menu(): PopupMenu;
    public function get_pos_at_line_column(line: Int, column: Int): Vector2;
    public function get_rect_at_line_column(line: Int, column: Int): Rect2;
    public function get_selection_from_column(): Int;
    public function get_selection_from_line(): Int;
    public function get_selection_text(): String;
    public function get_selection_to_column(): Int;
    public function get_selection_to_line(): Int;
    public function get_total_gutter_width(): Int;
    public function get_total_visible_rows(): Int;
    public function get_visible_rows(): Int;
    public function get_word_under_cursor(): String;
    public function has_keyword_color(keyword: String): Bool;
    public function has_redo(): Bool;
    public function has_undo(): Bool;
    public function insert_text_at_cursor(text: String): Void;
    public function is_folded(line: Int): Bool;
    public function is_line_hidden(line: Int): Bool;
    public function is_line_set_as_bookmark(line: Int): Bool;
    public function is_line_set_as_breakpoint(line: Int): Bool;
    public function is_line_set_as_safe(line: Int): Bool;
    public function is_line_wrapped(line: Int): Bool;
    public function is_mouse_over_selection(edges: Bool): Bool;
    public function is_selection_active(): Bool;
    public function menu_option(option: Int): Void;
    public function paste(): Void;
    public function redo(): Void;
    public function remove_breakpoints(): Void;
    public function search(key: String, flags: Int, from_line: Int, from_column: Int): PoolIntArray;
    public function select(from_line: Int, from_column: Int, to_line: Int, to_column: Int): Void;
    public function select_all(): Void;
    public function set_line(line: Int, new_text: String): Void;
    public function set_line_as_bookmark(line: Int, bookmark: Bool): Void;
    public function set_line_as_breakpoint(line: Int, breakpoint: Bool): Void;
    public function set_line_as_hidden(line: Int, enable: Bool): Void;
    public function set_line_as_safe(line: Int, safe: Bool): Void;
    public function toggle_fold_line(line: Int): Void;
    public function undo(): Void;
    public function unfold_line(line: Int): Void;
    public function unhide_all_lines(): Void;
    @:native("__new")
    public function new();
}
