package lucidkit.godot;

@:native("godot.CanvasItem")
extern class CanvasItem extends Node {
    public var light_mask: Int;
    public var material: Material;
    public var modulate: Color;
    public var self_modulate: Color;
    public var show_behind_parent: Bool;
    public var show_on_top: Bool;
    public var use_parent_material: Bool;
    public var visible: Bool;
    public function _draw(): Void;
    public function draw_arc(center: GdVector2, radius: Float, start_angle: Float, end_angle: Float, point_count: Int, color: Color, width: Float, antialiased: Bool): Void;
    public function draw_char(font: Font, position: GdVector2, char: String, next: String, modulate: Color): Float;
    public function draw_circle(position: GdVector2, radius: Float, color: Color): Void;
    public function draw_colored_polygon(points: PoolVector2Array, color: Color, uvs: PoolVector2Array, texture: Texture, normal_map: Texture, antialiased: Bool): Void;
    public function draw_line(from: GdVector2, to: GdVector2, color: Color, width: Float, antialiased: Bool): Void;
    public function draw_mesh(mesh: Mesh, texture: Texture, normal_map: Texture, transform: Transform2D, modulate: Color): Void;
    public function draw_multiline(points: PoolVector2Array, color: Color, width: Float, antialiased: Bool): Void;
    public function draw_multiline_colors(points: PoolVector2Array, colors: PoolColorArray, width: Float, antialiased: Bool): Void;
    public function draw_multimesh(multimesh: MultiMesh, texture: Texture, normal_map: Texture): Void;
    public function draw_polygon(points: PoolVector2Array, colors: PoolColorArray, uvs: PoolVector2Array, texture: Texture, normal_map: Texture, antialiased: Bool): Void;
    public function draw_polyline(points: PoolVector2Array, color: Color, width: Float, antialiased: Bool): Void;
    public function draw_polyline_colors(points: PoolVector2Array, colors: PoolColorArray, width: Float, antialiased: Bool): Void;
    public function draw_primitive(points: PoolVector2Array, colors: PoolColorArray, uvs: PoolVector2Array, texture: Texture, width: Float, normal_map: Texture): Void;
    public function draw_rect(rect: Rect2, color: Color, filled: Bool, width: Float, antialiased: Bool): Void;
    public function draw_set_transform(position: GdVector2, rotation: Float, scale: GdVector2): Void;
    public function draw_set_transform_matrix(xform: Transform2D): Void;
    public function draw_string(font: Font, position: GdVector2, text: String, modulate: Color, clip_w: Int): Void;
    public function draw_style_box(style_box: StyleBox, rect: Rect2): Void;
    public function draw_texture(texture: Texture, position: GdVector2, modulate: Color, normal_map: Texture): Void;
    public function draw_texture_rect(texture: Texture, rect: Rect2, tile: Bool, modulate: Color, transpose: Bool, normal_map: Texture): Void;
    public function draw_texture_rect_region(texture: Texture, rect: Rect2, src_rect: Rect2, modulate: Color, transpose: Bool, normal_map: Texture, clip_uv: Bool): Void;
    public function force_update_transform(): Void;
    public function get_canvas(): RID;
    public function get_canvas_item(): RID;
    public function get_canvas_transform(): Transform2D;
    public function get_global_mouse_position(): Vector2;
    public function get_global_transform(): Transform2D;
    public function get_global_transform_with_canvas(): Transform2D;
    public function get_local_mouse_position(): Vector2;
    public function get_transform(): Transform2D;
    public function get_viewport_rect(): Rect2;
    public function get_viewport_transform(): Transform2D;
    public function get_world_2d(): World2D;
    public function hide(): Void;
    public function is_local_transform_notification_enabled(): Bool;
    public function is_set_as_toplevel(): Bool;
    public function is_transform_notification_enabled(): Bool;
    public function is_visible_in_tree(): Bool;
    public function make_canvas_position_local(screen_point: GdVector2): Vector2;
    public function make_input_local(event: InputEvent): InputEvent;
    public function set_as_toplevel(enable: Bool): Void;
    public function set_notify_local_transform(enable: Bool): Void;
    public function set_notify_transform(enable: Bool): Void;
    public function show(): Void;
    public function update(): Void;
}
