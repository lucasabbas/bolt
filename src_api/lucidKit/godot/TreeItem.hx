package lucidkit.godot;

@:native("godot.TreeItem")
extern class TreeItem extends Object {
    public var collapsed: Bool;
    public var custom_minimum_height: Int;
    public var disable_folding: Bool;
    public function add_button(column: Int, button: Texture, id: Int, disabled: Bool, tooltip: String): Void;
    public function call_recursive(method: String): Variant;
    public function clear_custom_bg_color(column: Int): Void;
    public function clear_custom_color(column: Int): Void;
    public function deselect(column: Int): Void;
    public function erase_button(column: Int, button_idx: Int): Void;
    public function get_button(column: Int, button_idx: Int): Texture;
    public function get_button_by_id(column: Int, id: Int): Int;
    public function get_button_count(column: Int): Int;
    public function get_button_id(column: Int, button_idx: Int): Int;
    public function get_button_tooltip(column: Int, button_idx: Int): String;
    public function get_cell_mode(column: Int): Int;
    public function get_children(): TreeItem;
    public function get_custom_bg_color(column: Int): Color;
    public function get_custom_color(column: Int): Color;
    public function get_expand_right(column: Int): Bool;
    public function get_icon(column: Int): Texture;
    public function get_icon_max_width(column: Int): Int;
    public function get_icon_modulate(column: Int): Color;
    public function get_icon_region(column: Int): Rect2;
    public function get_metadata(column: Int): Variant;
    public function get_next(): TreeItem;
    public function get_next_visible(wrap: Bool): TreeItem;
    public function get_parent(): TreeItem;
    public function get_prev(): TreeItem;
    public function get_prev_visible(wrap: Bool): TreeItem;
    public function get_range(column: Int): Float;
    public function get_range_config(column: Int): Map<Dynamic, Dynamic>;
    public function get_suffix(column: Int): String;
    public function get_text(column: Int): String;
    public function get_text_align(column: Int): Int;
    public function get_tooltip(column: Int): String;
    public function is_button_disabled(column: Int, button_idx: Int): Bool;
    public function is_checked(column: Int): Bool;
    public function is_custom_set_as_button(column: Int): Bool;
    public function is_editable(column: Int): Bool;
    public function is_selectable(column: Int): Bool;
    public function is_selected(column: Int): Bool;
    public function move_to_bottom(): Void;
    public function move_to_top(): Void;
    public function remove_child(child: Object): Void;
    public function select(column: Int): Void;
    public function set_button(column: Int, button_idx: Int, button: Texture): Void;
    public function set_button_disabled(column: Int, button_idx: Int, disabled: Bool): Void;
    public function set_cell_mode(column: Int, mode: Int): Void;
    public function set_checked(column: Int, checked: Bool): Void;
    public function set_custom_as_button(column: Int, enable: Bool): Void;
    public function set_custom_bg_color(column: Int, color: Color, just_outline: Bool): Void;
    public function set_custom_color(column: Int, color: Color): Void;
    public function set_custom_draw(column: Int, object: Object, callback: String): Void;
    public function set_editable(column: Int, enabled: Bool): Void;
    public function set_expand_right(column: Int, enable: Bool): Void;
    public function set_icon(column: Int, texture: Texture): Void;
    public function set_icon_max_width(column: Int, width: Int): Void;
    public function set_icon_modulate(column: Int, modulate: Color): Void;
    public function set_icon_region(column: Int, region: Rect2): Void;
    public function set_metadata(column: Int, meta: Variant): Void;
    public function set_range(column: Int, value: Float): Void;
    public function set_range_config(column: Int, min: Float, max: Float, step: Float, expr: Bool): Void;
    public function set_selectable(column: Int, selectable: Bool): Void;
    public function set_suffix(column: Int, text: String): Void;
    public function set_text(column: Int, text: String): Void;
    public function set_text_align(column: Int, text_align: Int): Void;
    public function set_tooltip(column: Int, tooltip: String): Void;
}
