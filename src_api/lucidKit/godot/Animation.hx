package lucidkit.godot;

@:native("godot.Animation")
extern class Animation extends Resource {
    public var length: Float;
    public var loop: Bool;
    public var step: Float;
    public function add_track(type: Int, at_position: Int): Int;
    public function animation_track_get_key_animation(track_idx: Int, key_idx: Int): String;
    public function animation_track_insert_key(track_idx: Int, time: Float, animation: String): Int;
    public function animation_track_set_key_animation(track_idx: Int, key_idx: Int, animation: String): Void;
    public function audio_track_get_key_end_offset(track_idx: Int, key_idx: Int): Float;
    public function audio_track_get_key_start_offset(track_idx: Int, key_idx: Int): Float;
    public function audio_track_get_key_stream(track_idx: Int, key_idx: Int): Resource;
    public function audio_track_insert_key(track_idx: Int, time: Float, stream: Resource, start_offset: Float, end_offset: Float): Int;
    public function audio_track_set_key_end_offset(track_idx: Int, key_idx: Int, offset: Float): Void;
    public function audio_track_set_key_start_offset(track_idx: Int, key_idx: Int, offset: Float): Void;
    public function audio_track_set_key_stream(track_idx: Int, key_idx: Int, stream: Resource): Void;
    public function bezier_track_get_key_in_handle(track_idx: Int, key_idx: Int): Vector2;
    public function bezier_track_get_key_out_handle(track_idx: Int, key_idx: Int): Vector2;
    public function bezier_track_get_key_value(track_idx: Int, key_idx: Int): Float;
    public function bezier_track_insert_key(track_idx: Int, time: Float, value: Float, in_handle: GdVector2, out_handle: GdVector2): Int;
    public function bezier_track_interpolate(track_idx: Int, time: Float): Float;
    public function bezier_track_set_key_in_handle(track_idx: Int, key_idx: Int, in_handle: GdVector2): Void;
    public function bezier_track_set_key_out_handle(track_idx: Int, key_idx: Int, out_handle: GdVector2): Void;
    public function bezier_track_set_key_value(track_idx: Int, key_idx: Int, value: Float): Void;
    public function clear(): Void;
    public function copy_track(track_idx: Int, to_animation: Animation): Void;
    public function find_track(path: NodePath): Int;
    public function get_track_count(): Int;
    public function method_track_get_key_indices(track_idx: Int, time_sec: Float, delta: Float): PoolIntArray;
    public function method_track_get_name(track_idx: Int, key_idx: Int): String;
    public function method_track_get_params(track_idx: Int, key_idx: Int): Array<Dynamic>;
    public function remove_track(track_idx: Int): Void;
    public function track_find_key(track_idx: Int, time: Float, exact: Bool): Int;
    public function track_get_interpolation_loop_wrap(track_idx: Int): Bool;
    public function track_get_interpolation_type(track_idx: Int): Int;
    public function track_get_key_count(track_idx: Int): Int;
    public function track_get_key_time(track_idx: Int, key_idx: Int): Float;
    public function track_get_key_transition(track_idx: Int, key_idx: Int): Float;
    public function track_get_key_value(track_idx: Int, key_idx: Int): Variant;
    public function track_get_path(track_idx: Int): NodePath;
    public function track_get_type(track_idx: Int): Int;
    public function track_insert_key(track_idx: Int, time: Float, key: Variant, transition: Float): Void;
    public function track_is_enabled(track_idx: Int): Bool;
    public function track_is_imported(track_idx: Int): Bool;
    public function track_move_down(track_idx: Int): Void;
    public function track_move_to(track_idx: Int, to_idx: Int): Void;
    public function track_move_up(track_idx: Int): Void;
    public function track_remove_key(track_idx: Int, key_idx: Int): Void;
    public function track_remove_key_at_position(track_idx: Int, position: Float): Void;
    public function track_set_enabled(track_idx: Int, enabled: Bool): Void;
    public function track_set_imported(track_idx: Int, imported: Bool): Void;
    public function track_set_interpolation_loop_wrap(track_idx: Int, interpolation: Bool): Void;
    public function track_set_interpolation_type(track_idx: Int, interpolation: Int): Void;
    public function track_set_key_time(track_idx: Int, key_idx: Int, time: Float): Void;
    public function track_set_key_transition(track_idx: Int, key_idx: Int, transition: Float): Void;
    public function track_set_key_value(track_idx: Int, key: Int, value: Variant): Void;
    public function track_set_path(track_idx: Int, path: NodePath): Void;
    public function track_swap(track_idx: Int, with_idx: Int): Void;
    public function transform_track_insert_key(track_idx: Int, time: Float, location: GdVector3, rotation: Quat, scale: GdVector3): Int;
    public function transform_track_interpolate(track_idx: Int, time_sec: Float): Array<Dynamic>;
    public function value_track_get_key_indices(track_idx: Int, time_sec: Float, delta: Float): PoolIntArray;
    public function value_track_get_update_mode(track_idx: Int): Int;
    public function value_track_interpolate(track_idx: Int, time_sec: Float): Variant;
    public function value_track_set_update_mode(track_idx: Int, mode: Int): Void;
}
